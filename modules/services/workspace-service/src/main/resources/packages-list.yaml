swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "0.8.0"
  title: "Ballerina Composer API"
  description: |
    This specifies a **RESTful API** which act as the backend of Ballerina Composer.
  contact:
    name: "WSO2"
    url: "http://ballerina.io"
    email: "architecture@wso2.com"


######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.ballerina.io

# The base path of the API.
# Will be prefixed to all paths.
basePath: /ballerina/editor

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json


######################################################
# The "Package Collection" resource APIs
######################################################
paths:
  /packages:

#-----------------------------------------------------
# Retrieving the list of all Packages qualifying under a given search condition
#-----------------------------------------------------
    get:
      summary: |
        Get a list of packages existing in the environment.
      description: |
        This operation provides you a list of available Packages in the customers developer environment.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: Search based on package name
          type: string
        - $ref : "#/parameters/Accept"
        - $ref : "#/parameters/If-None-Match"
      tags:
        - Packages
      responses:
        200:
          description: |
            OK.
            List of qualifying Packages are returned.
          schema:
            $ref: '#/definitions/PackageList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'
#-----------------------------------------------------
# Create a new application
#-----------------------------------------------------
    post:
      summary: |
        Import a package in to the Ballerina environment
      description: |
        This operation can be used to import a new package in to the environment.
      consumes:
        - application/zip
        - application/octet-stream
      parameters:
        - $ref: '#/parameters/Content-Type'
      tags:
        - Package (Individual)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created package meta data.
          schema:
            $ref: '#/definitions/Package'
          headers:
            Location:
              description: |
                Location of the newly created Package.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error if the package has parser errors.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            Conflict.
            Package already exists.
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
          schema:
            $ref: '#/definitions/Error'


######################################################
# The "Individual Package" resource APIs
######################################################
  /packages/{packageName}:

#-----------------------------------------------------
# Retrieve the details of an Package
#-----------------------------------------------------
    get:
      summary: |
        Get details of a Package
      description: |
        Using this operation, you can retrieve complete details of a single Package. You need to provide the Name of the Package to retrive it.
      parameters:
        - $ref: '#/parameters/packageName'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Package (Individual)
      responses:
        200:
          description: |
            OK.
            Requested Package is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
          schema:
            $ref: '#/definitions/Package'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          description: |
            Not Found.
            Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'


######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

# Package Identifier
# Specified as part of the path expression
  packageName:
    name: packageName
    in: path
    description: |
    required: true
    type: string


# Used for pagination:
# The maximum number of resoures to be returned by a GET
  limit:
    name: limit
    in: query
    description: |
      Maximum size of resource array to return.
    default: 25
    type: integer

# Used for pagination:
# The order number of an instance in a qualified set of resoures
# at which to start to return the next batch of qualified resources
  offset:
    name: offset
    in: query
    description: |
      Starting point within the complete list of items qualified.
    default: 0
    type: integer

# The HTTP Accept header
  Accept:
    name: Accept
    in: header
    description: |
      Media types acceptable for the response. Default is application/json.
    default: application/json
    type: string

# The HTTP Content-Type header
  Content-Type:
    name: Content-Type
    in: header
    description: |
      Media type of the entity in the body. Default is application/json.
    default: application/json
    required: true
    type : string

# The HTTP If-None-Match header
# Used to avoid retrieving data that are already cached
  If-None-Match:
    name: If-None-Match
    in: header
    description: |
      Validator for conditional requests; based on the ETag of the formerly retrieved
      variant of the resourec.
    type : string

# The HTTP If-Modified-Since header
# Used to avoid retrieving data that are already cached
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header of the
      formerly retrieved variant of the resource.
    type: string

######################################################
# The resources used by some of the APIs above within the message body
######################################################
definitions:

#-----------------------------------------------------
# The Package List resource
#-----------------------------------------------------
  PackageList:
    title: Package List
    properties:
      count:
        type: integer
        description: |
          Number of APIs returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Package'

#-----------------------------------------------------
# The Package resource
#-----------------------------------------------------
  Package:
    title: Package meta data object
    required:
      - name
    properties:
      name:
        type: string
        example: CalculatorAPI
      description:
        type: string
        example: A calculator API that supports basic operations
      version:
        type: string
        example: 1.0.0
      connectors:
        description: List of connectors available in the package
        type: array
        items:
          $ref: '#/definitions/Connector'
      functions:
        type: array
        description: List of **public** functions available in the package
        items:
          $ref: '#/definitions/Function'



  Connector:
    title: Connector object returned with
    properties:
      name:
        type: string
      annotations:
        type: array
        items:
          $ref: '#/definitions/Annotation'
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      actions:
        type: array
        items:
          $ref: '#/definitions/Action'


  Parameter:
    title: Connector or function parameter
    required:
      - name
      - type
    properties:
      name:
        type: string
      type:
        type: string

  Action:
    title: Actions available in a connector
    properties:
      name:
        type: string
      annotations:
        type: array
        items:
          $ref: '#/definitions/Annotation'
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      returnParams:
        type: array
        items:
          $ref: '#/definitions/Parameter'


  Function:
    title: Public function available in a package
    properties:
      name:
        type: string
      description:
        type : string
      annotations:
        type: array
        items:
          $ref: '#/definitions/Annotation'
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      returnParams:
        type: array
        items:
          $ref: '#/definitions/Parameter'

  Annotation:
    title : Annotations available in a symbol
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        type: string

#-----------------------------------------------------
# The Error resource
#-----------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP status
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

#-----------------------------------------------------
# The Error List Item resource
#-----------------------------------------------------
  ErrorListItem:
    title: Description of Individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
        description: |
          Description about Individual errors occurred